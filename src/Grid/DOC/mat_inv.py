from numpy import matrix
from numpy import linalg

zm=1

m1=0
m2=0.7
s=0
x0=0



A = matrix( [
    [ (-zm)**7 , (-zm)**6 , (-zm)**5 , (-zm)**4 , (-zm)**3 , (-zm)**2 , -zm , 1 ], # P(-zm)=-1
    [ (2-zm)**7 , (2-zm)**6 , (2-zm)**5 , (2-zm)**4 , (2-zm)**3 , (2-zm)**2 , 2-zm , 1 ], # P(2-zm)=1

    [ 7*(-zm)**6 , 6*(-zm)**5 , 5*(-zm)**4 , 4*(-zm)**3 , 3*(-zm)**2 , 2*(-zm) , 1, 0 ], # P'(-zm)=m1
    [ 7*(2-zm)**6 , 6*(2-zm)**5 , 5*(2-zm)**4 , 4*(2-zm)**3 , 3*(2-zm)**2 , 2*(2-zm) , 1, 0 ], # P'(2-zm)=m1

    [ 7*6*(-zm)**5 , 6*5*(-zm)**4 , 5*4*(-zm)**3 , 4*3*(-zm)**2 , 3*2*(-zm) , 2, 0, 0 ], # P''(-zm)=s
    [ 7*6*(2-zm)**5 , 6*5*(2-zm)**4 , 5*4*(2-zm)**3 , 4*3*(2-zm)**2 , 3*2*(2-zm) , 2, 0, 0 ], # P''(2-zm)=s

    [0,0,0,0,0,0,0,1], # P(0)=x0
    [0,0,0,0,0,0,1,0] # P'(0)=m2
])

x = matrix( [
    [-1],
    [1],
    [m1],
    [m1],
    [s],
    [s],
    [x0],
    [m2]
])


S_1 = matrix([
    [15.0/8.0  - m1*7.0/8.0  - m2     + s/8.0],
    [-21.0/4.0 + m1*9.0/4.0  + m2*3.0 - s/4.0],
    [35.0/8.0  - m1*11.0/8.0 - m2*3.0 + s/8.0],
    [m2]
])

print A                                      # Transpose of A.
print A.I                                    # Inverse of A.
print linalg.solve(A,x)

print S_1
